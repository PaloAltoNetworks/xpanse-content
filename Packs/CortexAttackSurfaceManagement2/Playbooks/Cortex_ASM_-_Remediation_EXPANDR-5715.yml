id: Cortex ASM - Remediation - EXPANDR-5715
version: 4
vcShouldKeepItemLegacyProdMachine: false
name: Cortex ASM - Remediation - EXPANDR-5715
description: This playbook contains all the cloud provider sub playbooks for remediation
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 095f50ab-ebe4-4d75-8780-50d66ce8ca83
    type: start
    task:
      id: 095f50ab-ebe4-4d75-8780-50d66ce8ca83
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "3":
    id: "3"
    taskid: 0595a394-ab62-4c0f-8318-c2f58d7c66d5
    type: condition
    task:
      id: 0595a394-ab62-4c0f-8318-c2f58d7c66d5
      version: -1
      name: What provider is this service?
      description: Determines which cloud provider the service is in order to direct to the correct enrichment.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "4"
      AWS:
      - "10"
      Azure:
      - "6"
      GCP:
      - "9"
      On Prem:
      - "12"
      Unclaimed S3 Bucket:
      - "7"
    separatecontext: false
    conditions:
    - label: AWS
      condition:
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: alert.asmcloud
                accessor: provider
            iscontext: true
          right:
            value:
              simple: AWS
    - label: GCP
      condition:
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: alert.asmcloud
                accessor: provider
            iscontext: true
          right:
            value:
              simple: GCP
    - label: Azure
      condition:
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: alert.asmcloud
                accessor: provider
            iscontext: true
          right:
            value:
              simple: Azure
    - label: Unclaimed S3 Bucket
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: alert
                accessor: asmattacksurfaceruleid
                transformers:
                - operator: StripChars
                  args:
                    chars:
                      value:
                        simple: '[\"]'
            iscontext: true
          right:
            value:
              simple: UnclaimedS3Bucket
    - label: On Prem
      condition:
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: alert.asmcloud
                accessor: provider
            iscontext: true
          right:
            value:
              simple: On Prem
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 235
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: d2236edd-af39-4b6b-8412-8249bce59cb3
    type: title
    task:
      id: d2236edd-af39-4b6b-8412-8249bce59cb3
      version: -1
      name: Completed
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 860
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: c5c142e3-76b3-4fc3-8ec1-57f7b2f418e8
    type: playbook
    task:
      id: c5c142e3-76b3-4fc3-8ec1-57f7b2f418e8
      version: -1
      name: Azure - Network Security Group Remediation
      description: |-
        This playbook adds new Azure Network Security Groups (NSG) rules to NSGs attached to a NIC. The new rules will give access only to a private IP address range and block traffic that's exposed to the public internet ([using the private IP of the VM as stated in Azure documentation](https://learn.microsoft.com/en-us/azure/virtual-network/network-security-groups-overview)). For example, if RDP is exposed to the public internet, this playbook adds new firewall rules that only allows traffic from private IP address and blocks the rest of the RDP traffic.

        Conditions and limitations:
        - Limited to one resource group.
        - 200 Azure rules viewed at once to find the offending rule.
        - 2 priorities lower than the offending rule priority must be available.
        - Adds rules to NSGs associated to NICs.
      playbookName: Azure - Network Security Group Remediation
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      AzureSecurityGroup:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-SG
          accessor: id
      AzureVMPrivateIP:
        complex:
          root: alert.asmprivateip
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmprivateip.source
                iscontext: true
              right:
                value:
                  simple: Azure
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: IP
      RemotePort:
        complex:
          root: alert
          accessor: remoteport
      RemoteProtocol:
        complex:
          root: alert
          accessor: protocol
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 1100,
          "y": 450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: 06c5a823-6028-468f-8276-869fff8f725e
    type: playbook
    task:
      id: 06c5a823-6028-468f-8276-869fff8f725e
      version: -1
      name: AWS - Unclaimed S3 Bucket Remediation
      description: The playbook will create the unclaimed S3 bucket.
      playbookName: AWS - Unclaimed S3 Bucket Remediation
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      S3BucketName:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: S3-BucketName
          accessor: id
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 220,
          "y": 470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: d8aa3602-c306-48a9-8ef3-301c7e6ac952
    type: playbook
    task:
      id: d8aa3602-c306-48a9-8ef3-301c7e6ac952
      version: -1
      name: AWS - Security Group Remediation v2
      description: This playbook takes in some information about an EC2 instance (ID and public_ip) and with provided port and protocol, determines what security groups on the primary interface of an EC2 instance are over-permissive. It uses an automation to determine what interface on an EC2 instance has an over-permissive security group on, determine which security groups have over-permissive rules and to replace them with a copy of the security group that has only the over-permissive portion removed. Over-permissive is defined as sensitive ports (SSH, RDP, etc) being exposed to the internet via IPv4.
      playbookName: AWS - Security Group Remediation v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      InstanceID:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-ID
          accessor: id
      Port:
        complex:
          root: alert
          accessor: remoteport
      Protocol:
        complex:
          root: alert
          accessor: protocol
          transformers:
          - operator: toLowerCase
      PublicIP:
        complex:
          root: alert
          accessor: remoteip
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": -30,
          "y": 680
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "9":
    id: "9"
    taskid: 646b2ae0-5ddb-49f0-8689-e58e46b02ff7
    type: playbook
    task:
      id: 646b2ae0-5ddb-49f0-8689-e58e46b02ff7
      version: -1
      name: GCP - Firewall Remediation
      playbookName: GCP - Firewall Remediation
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      GcpInstance:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-NAME
          accessor: id
      GcpNetwork:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-VIRTUAL-NET
          accessor: id
      GcpProject:
        complex:
          root: alert.asmcloud
          accessor: project
          transformers:
          - operator: FirstArrayElement
      GcpZone:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-ZONE
          accessor: id
      RemotePort:
        complex:
          root: alert
          accessor: remoteport
      RemoteProtocol:
        complex:
          root: alert
          accessor: protocol
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 680,
          "y": 470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: 6460aa88-1510-432a-82b0-c21f78e42a56
    type: condition
    task:
      id: 6460aa88-1510-432a-82b0-c21f78e42a56
      version: -1
      name: Is AWSAssumeRoleName Input defined?
      description: Determines which cloud provider the service is in order to direct to the correct enrichment.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.AWSAssumeRoleName
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -210,
          "y": 450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "11":
    id: "11"
    taskid: e76c2e0f-a20f-49e3-839e-78830832cdb7
    type: playbook
    task:
      id: e76c2e0f-a20f-49e3-839e-78830832cdb7
      version: -1
      name: AWS - Security Group Remediation v2
      description: This playbook takes in some information about an EC2 instance (ID and public_ip) and with provided port and protocol, determines what security groups on the primary interface of an EC2 instance are over-permissive.  It uses an automation to determine what interface on an EC2 instance has an over-permissive security group on, determine which security groups have over-permissive rules and to replace them with a copy of the security group that has only the over-permissive portion removed.  Over-permissive is defined as sensitive ports (SSH, RDP, etc) being exposed to the internet via IPv4.
      playbookName: AWS - Security Group Remediation v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      AWSAssumeArn:
        complex:
          root: alert.asmcloud
          accessor: project
          transformers:
          - operator: FirstArrayElement
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'arn:aws:iam::'
              suffix:
                value:
                  simple: :role/
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.AWSAssumeRoleName
                iscontext: true
      InstanceID:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-ID
          accessor: id
      Port:
        complex:
          root: alert
          accessor: remoteport
      Protocol:
        complex:
          root: alert
          accessor: protocol
          transformers:
          - operator: toLowerCase
      PublicIP:
        complex:
          root: alert
          accessor: remoteip
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": -460,
          "y": 680
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "12":
    id: "12"
    taskid: 4f871129-8812-4c3d-87d1-58dd095d7dd9
    type: playbook
    task:
      id: 4f871129-8812-4c3d-87d1-58dd095d7dd9
      version: -1
      name: Cortex ASM - On Prem Remediation
      playbookName: Cortex ASM - On Prem Remediation
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      RemoteIP:
        complex:
          root: alert
          accessor: remoteip
      RemotePort:
        complex:
          root: alert
          accessor: remoteport
      RemoteProtocol:
        complex:
          root: alert
          accessor: protocol
          transformers:
          - operator: toLowerCase
      RuleName:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: FIREWALL-RULE-NAME
          accessor: id
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 1520,
          "y": 420
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 875,
        "width": 2360,
        "x": -460,
        "y": 50
      }
    }
  }
inputs:
- key: AWSAssumeRoleName
  value: {}
  required: false
  description: If assuming roles for AWS, this is the name of the role to assume (should be the same for all organizations)
  playbookInputQuery:
outputs: []
fromversion: 6.5.0
tests:
- No tests (auto formatted)
