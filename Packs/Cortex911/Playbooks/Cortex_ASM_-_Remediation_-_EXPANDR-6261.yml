id: Cortex ASM - Remediation - EXPANDR-6261
version: 1
vcShouldKeepItemLegacyProdMachine: false
name: Cortex ASM - Remediation - EXPANDR-6261
description: This playbook contains all the cloud provider sub playbooks for remediation
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: c4893815-be6b-4741-8f26-10853ec0a7f4
    type: start
    task:
      id: c4893815-be6b-4741-8f26-10853ec0a7f4
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "3":
    id: "3"
    taskid: f2d05302-154f-4ff9-86c6-c9fbe95fc2f8
    type: condition
    task:
      id: f2d05302-154f-4ff9-86c6-c9fbe95fc2f8
      version: -1
      name: What provider is this service?
      description: Determines which cloud provider the service is in order to direct
        to the correct enrichment.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "4"
      AWS:
      - "10"
      Azure:
      - "6"
      GCP:
      - "9"
      Unclaimed S3 Bucket:
      - "7"
    separatecontext: false
    conditions:
    - label: AWS
      condition:
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: alert.asmcloud
                accessor: provider
            iscontext: true
          right:
            value:
              simple: AWS
    - label: GCP
      condition:
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: alert.asmcloud
                accessor: provider
            iscontext: true
          right:
            value:
              simple: GCP
    - label: Azure
      condition:
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: alert.asmcloud
                accessor: provider
            iscontext: true
          right:
            value:
              simple: Azure
    - label: Unclaimed S3 Bucket
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: alert
                accessor: asmattacksurfaceruleid
                transformers:
                - operator: StripChars
                  args:
                    chars:
                      value:
                        simple: '[\"]'
            iscontext: true
          right:
            value:
              simple: UnclaimedS3Bucket
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 235
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: f1a09d17-8c29-4e64-8f05-86a15f196b7e
    type: title
    task:
      id: f1a09d17-8c29-4e64-8f05-86a15f196b7e
      version: -1
      name: Completed
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": 450,
          "y": 860
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: 9d86e56e-103d-4e44-8c82-5cc6b64395c1
    type: playbook
    task:
      id: 9d86e56e-103d-4e44-8c82-5cc6b64395c1
      version: -1
      name: Azure - Network Security Group Remediation
      description: |-
        This playbook adds new Azure Network Security Groups (NSG) rules to NSGs attached to a NIC. The new rules will give access only to a private IP address range and block traffic that's exposed to the public internet ([using the private IP of the VM as stated in Azure documentation](https://learn.microsoft.com/en-us/azure/virtual-network/network-security-groups-overview)). For example, if RDP is exposed to the public internet, this playbook adds new firewall rules that only allows traffic from private IP address and blocks the rest of the RDP traffic.

        Conditions and limitations:
        - Limited to one resource group.
        - 200 Azure rules viewed at once to find the offending rule.
        - 2 priorities lower than the offending rule priority must be available.
        - Adds rules to NSGs associated to NICs.
      playbookName: Azure - Network Security Group Remediation
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      AzureSecurityGroup:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-SG
          accessor: id
      AzureVMPrivateIP:
        complex:
          root: alert.asmprivateip
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmprivateip.source
                iscontext: true
              right:
                value:
                  simple: Azure
          transformers:
          - operator: getField
            args:
              field:
                value:
                  simple: IP
      RemotePort:
        complex:
          root: alert
          accessor: remoteport
      RemoteProtocol:
        complex:
          root: alert
          accessor: protocol
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 1100,
          "y": 450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: d7e950ce-3c6a-4f9e-882d-93eb5384c2a1
    type: playbook
    task:
      id: d7e950ce-3c6a-4f9e-882d-93eb5384c2a1
      version: -1
      name: AWS - Unclaimed S3 Bucket Remediation
      description: The playbook will create the unclaimed S3 bucket.
      playbookName: AWS - Unclaimed S3 Bucket Remediation
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      S3BucketName:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: S3-BucketName
          accessor: id
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 220,
          "y": 470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: 994c5391-c3b5-49f4-871e-6e357318d71b
    type: playbook
    task:
      id: 994c5391-c3b5-49f4-871e-6e357318d71b
      version: -1
      name: AWS - Security Group Remediation v2
      description: This playbook takes in some information about an EC2 instance (ID
        and public_ip) and with provided port and protocol, determines what security
        groups on the primary interface of an EC2 instance are over-permissive. It
        uses an automation to determine what interface on an EC2 instance has an over-permissive
        security group on, determine which security groups have over-permissive rules
        and to replace them with a copy of the security group that has only the over-permissive
        portion removed. Over-permissive is defined as sensitive ports (SSH, RDP,
        etc) being exposed to the internet via IPv4.
      playbookName: AWS - Security Group Remediation v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      InstanceID:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-ID
          accessor: id
      Port:
        complex:
          root: alert
          accessor: remoteport
      Protocol:
        complex:
          root: alert
          accessor: protocol
          transformers:
          - operator: toLowerCase
      PublicIP:
        complex:
          root: alert
          accessor: remoteip
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": -120,
          "y": 670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "9":
    id: "9"
    taskid: 9a7395bf-a7d7-4733-892d-0072799416c6
    type: playbook
    task:
      id: 9a7395bf-a7d7-4733-892d-0072799416c6
      version: -1
      name: GCP - Firewall Remediation_EXPANDR-6261
      playbookName: GCP - Firewall Remediation_EXPANDR-6261
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      GcpInstance:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-NAME
          accessor: id
      GcpNetwork:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-VIRTUAL-NET
          accessor: id
      GcpProject:
        complex:
          root: alert.asmcloud
          accessor: project
          transformers:
          - operator: FirstArrayElement
      GcpZone:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-ZONE
          accessor: id
      RemotePort:
        complex:
          root: alert
          accessor: remoteport
      RemoteProtocol:
        complex:
          root: alert
          accessor: protocol
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 680,
          "y": 470
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: eddf4618-6fe3-44c7-8e6e-99827e841c63
    type: condition
    task:
      id: eddf4618-6fe3-44c7-8e6e-99827e841c63
      version: -1
      name: Is AWSAssumeRoleName Input defined?
      description: Determines which cloud provider the service is in order to direct
        to the correct enrichment.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.AWSAssumeRoleName
            iscontext: true
    continueonerrortype: ""
    view: |-
      {
        "position": {
          "x": -300,
          "y": 440
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "11":
    id: "11"
    taskid: 4ffc3568-4f80-46a7-8748-4dc717524bf9
    type: playbook
    task:
      id: 4ffc3568-4f80-46a7-8748-4dc717524bf9
      version: -1
      name: AWS - Security Group Remediation v2
      description: This playbook takes in some information about an EC2 instance (ID
        and public_ip) and with provided port and protocol, determines what security
        groups on the primary interface of an EC2 instance are over-permissive.  It
        uses an automation to determine what interface on an EC2 instance has an over-permissive
        security group on, determine which security groups have over-permissive rules
        and to replace them with a copy of the security group that has only the over-permissive
        portion removed.  Over-permissive is defined as sensitive ports (SSH, RDP,
        etc) being exposed to the internet via IPv4.
      playbookName: AWS - Security Group Remediation v2
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      AWSAssumeArn:
        complex:
          root: alert.asmcloud
          accessor: project
          transformers:
          - operator: FirstArrayElement
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'arn:aws:iam::'
              suffix:
                value:
                  simple: :role/
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.AWSAssumeRoleName
                iscontext: true
      InstanceID:
        complex:
          root: alert.asmsystemids
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: alert.asmsystemids.type
                iscontext: true
              right:
                value:
                  simple: ASSET-ID
          accessor: id
      Port:
        complex:
          root: alert
          accessor: remoteport
      Protocol:
        complex:
          root: alert
          accessor: protocol
          transformers:
          - operator: toLowerCase
      PublicIP:
        complex:
          root: alert
          accessor: remoteip
    separatecontext: true
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": -550,
          "y": 670
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 875,
        "width": 2030,
        "x": -550,
        "y": 50
      }
    }
  }
inputs:
- key: AWSAssumeRoleName
  value: {}
  required: false
  description: If assuming roles for AWS, this is the name of the role to assume (should
    be the same for all organizations)
  playbookInputQuery: null
outputs: []
